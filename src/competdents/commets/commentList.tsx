import React, { useEffect, useState } from "react";
import axios from "axios";
import { IComment } from "../interface/commet";
import { Iproduct } from "../interface/product";

const AdminComments = () => {
  const [comments, setComments] = useState<IComment[]>([]);
  const [products, setProducts] = useState<Iproduct[]>([]);

  useEffect(() => {
    fetchComments();
    fetchProducts();
  }, []);

  // üîπ L·∫•y danh s√°ch b√¨nh lu·∫≠n
  const fetchComments = async () => {
    try {
      const res = await axios.get<IComment[]>("http://localhost:3000/comments");
      console.log("B√¨nh lu·∫≠n t·ª´ API:", res.data); // Debug danh s√°ch b√¨nh lu·∫≠n
      setComments(res.data);
    } catch (error) {
      console.error("L·ªói khi l·∫•y b√¨nh lu·∫≠n:", error);
    }
  };

  // üîπ L·∫•y danh s√°ch s·∫£n ph·∫©m
  const fetchProducts = async () => {
    try {
      const res = await axios.get<Iproduct[]>("http://localhost:3000/products");
      console.log("Danh s√°ch s·∫£n ph·∫©m t·ª´ API:", res.data); // Debug danh s√°ch s·∫£n ph·∫©m
      setProducts(res.data);
    } catch (error) {
      console.error("L·ªói khi l·∫•y s·∫£n ph·∫©m:", error);
    }
  };

  // üîπ L·∫•y t√™n b√†i vi·∫øt theo productId
  const getProductName = (productId: number) => {
    console.log("T√¨m s·∫£n ph·∫©m v·ªõi ID:", productId); // Debug ID s·∫£n ph·∫©m c·∫ßn t√¨m
    if (products.length === 0) return "ƒêang t·∫£i...";
    const product = products.find((p) => p.id === productId);
    console.log("S·∫£n ph·∫©m t√¨m th·∫•y:", product); // Ki·ªÉm tra s·∫£n ph·∫©m t√¨m th·∫•y
    return product ? product.name : "B√†i vi·∫øt kh√¥ng x√°c ƒë·ªãnh";
  };

  // üîπ X√≥a b√¨nh lu·∫≠n
  const deleteComment = async (id: number) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√¨nh lu·∫≠n n√†y kh√¥ng?")) {
      try {
        await axios.delete(`http://localhost:3000/comments/${id}`);
        setComments(comments.filter(comment => comment.id !== id));
        alert("ƒê√£ x√≥a b√¨nh lu·∫≠n!");
      } catch (error) {
        console.error("L·ªói khi x√≥a b√¨nh lu·∫≠n:", error);
      }
    }
  };

  return (
    <div> 
      <br />
      <h3>Qu·∫£n L√Ω B√¨nh Lu·∫≠n</h3>
      <div className="container mt-4">
        <table className="table table-striped table-bordered">
          <thead className="table-dark">
            <tr>
              <th>ID</th>
              <th>B√†i Vi·∫øt</th>
              <th>Email Kh√°ch H√†ng</th>
              <th>N·ªôi Dung</th>
              <th>H√†nh ƒê·ªông</th>
            </tr>
          </thead>
          <tbody>
            {comments.length > 0 ? (
              comments.map((comment) => (
                <tr key={comment.id}>
                  <td>{comment.id}</td>
                  <td>{getProductName(comment.productId)}</td>
                  <td>{localStorage.getItem("user") ? JSON.parse(localStorage.getItem("user")!).email : "·∫®n danh"}</td>
                  <td>{comment.comment}</td>
                  <td>
                    <button className="btn btn-danger" onClick={() => deleteComment(comment.id)}>
                      X√≥a
                    </button>
                  </td>
                </tr>
              ))
            ) : (
              <tr>
                <td colSpan={5} className="text-center">
                  Kh√¥ng c√≥ b√¨nh lu·∫≠n n√†o.
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default AdminComments;
